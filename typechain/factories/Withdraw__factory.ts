/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Withdraw, WithdrawInterface } from "../Withdraw";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610920806100826000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301e3366714610051578063715018a6146100665780638da5cb5b1461006e578063f2fde38b14610090575b600080fd5b61006461005f366004610547565b6100a3565b005b6100646101ef565b6000546001600160a01b031660405161008791906107bb565b60405180910390f35b61006461009e366004610503565b610225565b6000546001600160a01b031633146100d65760405162461bcd60e51b81526004016100cd90610825565b60405180910390fd5b600260015414156100f95760405162461bcd60e51b81526004016100cd90610855565b60026001556040516370a0823160e01b815281906001600160a01b038516906370a082319061012c9030906004016107bb565b60206040518083038186803b15801561014457600080fd5b505afa158015610158573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017c9190610594565b101561019a5760405162461bcd60e51b81526004016100cd90610815565b6101a5838383610281565b816001600160a01b03167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040516101de9190610865565b60405180910390a250506001805550565b6000546001600160a01b031633146102195760405162461bcd60e51b81526004016100cd90610825565b61022360006102dc565b565b6000546001600160a01b0316331461024f5760405162461bcd60e51b81526004016100cd90610825565b6001600160a01b0381166102755760405162461bcd60e51b81526004016100cd906107f5565b61027e816102dc565b50565b6102d78363a9059cbb60e01b84846040516024016102a09291906107c9565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261032c565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610381826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103bb9092919063ffffffff16565b8051909150156102d7578080602001905181019061039f9190610529565b6102d75760405162461bcd60e51b81526004016100cd90610845565b60606103ca84846000856103d4565b90505b9392505050565b6060824710156103f65760405162461bcd60e51b81526004016100cd90610805565b843b6104145760405162461bcd60e51b81526004016100cd90610835565b600080866001600160a01b0316858760405161043091906107af565b60006040518083038185875af1925050503d806000811461046d576040519150601f19603f3d011682016040523d82523d6000602084013e610472565b606091505b509150915061048282828661048d565b979650505050505050565b6060831561049c5750816103cd565b8251156104ac5782518084602001fd5b8160405162461bcd60e51b81526004016100cd91906107e4565b80356104d1816108bf565b92915050565b80516104d1816108d3565b80356104d1816108db565b80356104d1816108e4565b80516104d1816108e4565b60006020828403121561051557600080fd5b600061052184846104c6565b949350505050565b60006020828403121561053b57600080fd5b600061052184846104d7565b60008060006060848603121561055c57600080fd5b600061056886866104e2565b9350506020610579868287016104c6565b925050604061058a868287016104ed565b9150509250925092565b6000602082840312156105a657600080fd5b600061052184846104f8565b6105bb81610873565b82525050565b60006105cb825190565b6105d981856020860161088f565b9290920192915050565b60006105ed825190565b80845260208401935061060481856020860161088f565b601f01601f19169290920192915050565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015291505b5060400190565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b60208201529150610654565b601081526000602082016f2737ba1032b737bab3b4103a37b5b2b760811b815291505b5060200190565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260006106c1565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000815291506106c1565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b60208201529150610654565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815291506106c1565b806105bb565b60006103cd82846105c1565b602081016104d182846105b2565b604081016107d782856105b2565b6103cd60208301846107a9565b602080825281016103cd81846105e3565b602080825281016104d181610615565b602080825281016104d18161065b565b602080825281016104d18161069e565b602080825281016104d1816106c8565b602080825281016104d1816106fa565b602080825281016104d18161072e565b602080825281016104d181610775565b602081016104d182846107a9565b60006001600160a01b0382166104d1565b60006104d182610873565b60005b838110156108aa578181015183820152602001610892565b838111156108b9576000848401525b50505050565b6108c881610873565b811461027e57600080fd5b8015156108c8565b6108c881610884565b806108c856fea2646970667358221220a88e001d9f0a1bca43e334b539f19889046819f3f16e7437452f6e8a0777d99164736f6c63430008040033";

export class Withdraw__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Withdraw> {
    return super.deploy(overrides || {}) as Promise<Withdraw>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Withdraw {
    return super.attach(address) as Withdraw;
  }
  connect(signer: Signer): Withdraw__factory {
    return super.connect(signer) as Withdraw__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawInterface {
    return new utils.Interface(_abi) as WithdrawInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Withdraw {
    return new Contract(address, _abi, signerOrProvider) as Withdraw;
  }
}
