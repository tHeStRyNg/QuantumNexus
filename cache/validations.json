{
  "version": "3.2",
  "log": [
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "e4e5e703ecbd91847aae8abef406ca51013739c83e18fc762c50db79f89fd57c",
          "withoutMetadata": "ffa3d2aa4ac087b0bfc4a3a4ac126d795c7dfcfb96ca0658e76f568cec90e89c",
          "linkedWithoutMetadata": "ffa3d2aa4ac087b0bfc4a3a4ac126d795c7dfcfb96ca0658e76f568cec90e89c"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:17",
        "version": {
          "withMetadata": "1b9196fcbc39d75ea6373fdc0220393c49b94bdd2e667b822efdf80947c65912",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "99ccf0db4c2dacd6dd4b4b5746a0647fd8aa6731ca26b84b26b6155e44d32138",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:15",
        "version": {
          "withMetadata": "9e3848e99eaa083eb038561923be629b149ca78760e62f7d86299a900e6829f4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Flashloan": {
        "src": "contracts/Flashloan.sol:22",
        "version": {
          "withMetadata": "c11cd532243f69d7ea3289afa8d93120baea0108f95cea13e069fbfe2fd9c50e",
          "withoutMetadata": "07014fcda5a87bb417721bc5b0d28f6e089b9ef7c6cfdaa65e6a434076381b15",
          "linkedWithoutMetadata": "07014fcda5a87bb417721bc5b0d28f6e089b9ef7c6cfdaa65e6a434076381b15"
        },
        "inherit": [
          "Withdraw",
          "ReentrancyGuard",
          "Ownable",
          "Context",
          "FlashloanValidation",
          "DodoBase",
          "IFlashloan"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "RouteUtils",
          "Part"
        ],
        "methods": [
          "dodoFlashLoan((address,uint256,struct IFlashloan.Route[]))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Liquidations": {
        "src": "contracts/Liquidations.sol:18",
        "version": {
          "withMetadata": "797e2f1455a8dc702bc5f51606ffe44edf1cb6f75436eabeac4beb674985c675",
          "withoutMetadata": "85fc8701126fa65dc40909da15487cc7e3751a889da6d7660ab69770bf1264b5",
          "linkedWithoutMetadata": "85fc8701126fa65dc40909da15487cc7e3751a889da6d7660ab69770bf1264b5"
        },
        "inherit": [
          "ILiquidations",
          "FlashLoanSimpleReceiverBase",
          "IFlashLoanSimpleReceiver"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "Part"
        ],
        "methods": [
          "(address)",
          "liquidation((address,struct ILiquidations.Route[],address))",
          "executeOperation(address,uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Liquidations",
            "src": "contracts/Liquidations.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Router": {
        "src": "contracts/Router.sol:6",
        "version": {
          "withMetadata": "ec1f7ff06f4b2be2df79e8afe6ba16452f212e756b66ea89b726f0cb7b36bf5e",
          "withoutMetadata": "10659b5e79c219b6772db80f31a7d02ed4cdf4d92fb6a2f6f4b1480990b2b06e",
          "linkedWithoutMetadata": "10659b5e79c219b6772db80f31a7d02ed4cdf4d92fb6a2f6f4b1480990b2b06e"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address[],struct Router.PoolInfo[])",
          "getRouterAddress(uint8)",
          "updateRouterAddress(uint8,address)",
          "getFee(address,address)",
          "sortTokenPair(address,address)",
          "updateFee(address,address,uint24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Router",
              "label": "routers",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/Router.sol:7"
            },
            {
              "contract": "Router",
              "label": "pools",
              "type": "t_array(t_struct(PoolInfo)3130_storage)dyn_storage",
              "src": "contracts/Router.sol:15"
            }
          ],
          "types": {
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_struct(PoolInfo)3130_storage)dyn_storage": {
              "label": "struct Router.PoolInfo[]"
            },
            "t_struct(PoolInfo)3130_storage": {
              "label": "struct Router.PoolInfo",
              "members": [
                {
                  "label": "base",
                  "type": "t_address"
                },
                {
                  "label": "quote",
                  "type": "t_address"
                },
                {
                  "label": "fee",
                  "type": "t_uint24"
                }
              ]
            },
            "t_uint24": {
              "label": "uint24"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AaveFlashloan": {
        "src": "contracts/aave/AaveFlashloan.sol:12",
        "version": {
          "withMetadata": "1e893054f423d5b7f5923b51eaa2f72f8f039556ab4c425dab3973476f35a705",
          "withoutMetadata": "8d07ebe8097a1b260d18934d9fde4fc987c6e554f93f4a79353e4a87e90e0828",
          "linkedWithoutMetadata": "8d07ebe8097a1b260d18934d9fde4fc987c6e554f93f4a79353e4a87e90e0828"
        },
        "inherit": [
          "FlashLoanSimpleReceiverBase",
          "IFlashLoanSimpleReceiver"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "console"
        ],
        "methods": [
          "(address)",
          "aaveFlashloan(address,uint256)",
          "executeOperation(address,uint256,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AaveFlashloan",
            "src": "contracts/aave/AaveFlashloan.sol:16"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DataTypes": {
        "src": "contracts/aave/DataTypes.sol:5",
        "version": {
          "withMetadata": "7446039abcb45ffa63efe454d5b1b1e96b75b339eb8efa07ee0ec735c5348f93",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "FlashLoanSimpleReceiverBase": {
        "src": "contracts/aave/FlashLoanSimpleReceiverBase.sol:14",
        "inherit": [
          "IFlashLoanSimpleReceiver"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FlashLoanSimpleReceiverBase",
            "src": "contracts/aave/FlashLoanSimpleReceiverBase.sol:18"
          },
          {
            "kind": "state-variable-immutable",
            "name": "ADDRESSES_PROVIDER",
            "src": "contracts/aave/FlashLoanSimpleReceiverBase.sol:15"
          },
          {
            "kind": "state-variable-immutable",
            "name": "POOL",
            "src": "contracts/aave/FlashLoanSimpleReceiverBase.sol:16"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IFlashLoanSimpleReceiver": {
        "src": "contracts/aave/IFlashLoanSimpleReceiver.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "executeOperation(address,uint256,uint256,address,bytes)",
          "ADDRESSES_PROVIDER()",
          "POOL()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPool": {
        "src": "contracts/aave/IPool.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mintUnbacked(address,uint256,address,uint16)",
          "backUnbacked(address,uint256,uint256)",
          "supply(address,uint256,address,uint16)",
          "supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)",
          "withdraw(address,uint256,address)",
          "borrow(address,uint256,uint256,uint16,address)",
          "repay(address,uint256,uint256,address)",
          "repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)",
          "repayWithATokens(address,uint256,uint256)",
          "swapBorrowRateMode(address,uint256)",
          "rebalanceStableBorrowRate(address,address)",
          "setUserUseReserveAsCollateral(address,bool)",
          "liquidationCall(address,address,address,uint256,bool)",
          "flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)",
          "flashLoanSimple(address,address,uint256,bytes,uint16)",
          "getUserAccountData(address)",
          "initReserve(address,address,address,address,address)",
          "dropReserve(address)",
          "setReserveInterestRateStrategyAddress(address,address)",
          "setConfiguration(address,(uint256))",
          "getConfiguration(address)",
          "getUserConfiguration(address)",
          "getReserveNormalizedIncome(address)",
          "getReserveNormalizedVariableDebt(address)",
          "getReserveData(address)",
          "finalizeTransfer(address,address,address,uint256,uint256,uint256)",
          "getReservesList()",
          "getReserveAddressById(uint16)",
          "ADDRESSES_PROVIDER()",
          "updateBridgeProtocolFee(uint256)",
          "updateFlashloanPremiums(uint128,uint128)",
          "configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))",
          "getEModeCategoryData(uint8)",
          "setUserEMode(uint8)",
          "getUserEMode(address)",
          "resetIsolationModeTotalDebt(address)",
          "MAX_STABLE_RATE_BORROW_SIZE_PERCENT()",
          "FLASHLOAN_PREMIUM_TOTAL()",
          "BRIDGE_PROTOCOL_FEE()",
          "FLASHLOAN_PREMIUM_TO_PROTOCOL()",
          "MAX_NUMBER_RESERVES()",
          "mintToTreasury(address[])",
          "rescueTokens(address,address,uint256)",
          "deposit(address,uint256,address,uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPoolAddressesProvider": {
        "src": "contracts/aave/IPoolAddressesProvider.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getMarketId()",
          "setMarketId(string)",
          "getAddress(bytes32)",
          "setAddressAsProxy(bytes32,address)",
          "setAddress(bytes32,address)",
          "getPool()",
          "setPoolImpl(address)",
          "getPoolConfigurator()",
          "setPoolConfiguratorImpl(address)",
          "getPriceOracle()",
          "setPriceOracle(address)",
          "getACLManager()",
          "setACLManager(address)",
          "getACLAdmin()",
          "setACLAdmin(address)",
          "getPriceOracleSentinel()",
          "setPriceOracleSentinel(address)",
          "getPoolDataProvider()",
          "setPoolDataProvider(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BalancerFlashLoan": {
        "src": "contracts/balancer/BalancerFlashloan.sol:10",
        "version": {
          "withMetadata": "39517b07b614f6b829f7e89285a3891e5696a0c369f7ee50320ae558d821da18",
          "withoutMetadata": "fd8410eec84b68a682617443838297691f7cf3e84022f1c982f78693a78e63a8",
          "linkedWithoutMetadata": "fd8410eec84b68a682617443838297691f7cf3e84022f1c982f78693a78e63a8"
        },
        "inherit": [
          "IFlashLoanRecipient"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "(address)",
          "receiveFlashLoan(contract IERC20[],uint256[],uint256[],bytes)",
          "flashLoan(contract IERC20[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BalancerFlashLoan",
            "src": "contracts/balancer/BalancerFlashloan.sol:15"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vault",
            "src": "contracts/balancer/BalancerFlashloan.sol:13"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBalancerVault": {
        "src": "contracts/balancer/IBalancerVault.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(address,contract IERC20[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IFlashLoanRecipient": {
        "src": "contracts/balancer/IFlashLoanRecipient.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveFlashLoan(contract IERC20[],uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IProtocolFeesCollector": {
        "src": "contracts/balancer/IProtocolFeesCollector.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getSwapFeePercentage()",
          "getFlashLoanFeePercentage()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DodoBase": {
        "src": "contracts/base/DodoBase.sol:8",
        "version": {
          "withMetadata": "ccc1454cd10342d4ebb209e7206ff5b3b93209ced907a9c9dbf228c44bc567a8",
          "withoutMetadata": "77f1a4cffaa6c4764b3011a27da811729c7dcf7235cc92c397072fffc091d1d3",
          "linkedWithoutMetadata": "77f1a4cffaa6c4764b3011a27da811729c7dcf7235cc92c397072fffc091d1d3"
        },
        "inherit": [
          "IFlashloan"
        ],
        "libraries": [
          "RouteUtils"
        ],
        "methods": [
          "DVMFlashLoanCall(address,uint256,uint256,bytes)",
          "DPPFlashLoanCall(address,uint256,uint256,bytes)",
          "DSPFlashLoanCall(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "FlashloanValidation": {
        "src": "contracts/base/FlashloanValidation.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdraw": {
        "src": "contracts/base/Withdraw.sol:8",
        "version": {
          "withMetadata": "9030502b6243bdfda4d299c022c2454dd2ed9479a4bca6fc5dabdbb0817364dc",
          "withoutMetadata": "b5a36db3eb6325021e46b8b08c765ed2a40c12f6611b67fc18f35bf2e221cb86",
          "linkedWithoutMetadata": "b5a36db3eb6325021e46b8b08c765ed2a40c12f6611b67fc18f35bf2e221cb86"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "withdrawToken(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DODOFlashloan": {
        "src": "contracts/dodo/DODOFlashloan.sol:25",
        "version": {
          "withMetadata": "a33f463c574a9caa42d12881451aaa08316ec22f55122d9e8afb47489eae9d13",
          "withoutMetadata": "1f20ee5a520a8e0e358fc2d65dd6ca00576db84d2ec2463e5a708f97d1d6ca09",
          "linkedWithoutMetadata": "1f20ee5a520a8e0e358fc2d65dd6ca00576db84d2ec2463e5a708f97d1d6ca09"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "dodoFlashLoan(address,uint256,address)",
          "DVMFlashLoanCall(address,uint256,uint256,bytes)",
          "DPPFlashLoanCall(address,uint256,uint256,bytes)",
          "DSPFlashLoanCall(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DODOProxyIntegrate": {
        "src": "contracts/dodo/DODOProxyIntegrate.sol:35",
        "version": {
          "withMetadata": "7028fd9fa9436c8dfc08b749165fd38c029eaaa89db7630aefeae62cf76c8915",
          "withoutMetadata": "b64b5d2728a37ba23213815a5ff510a7000237566cc3fb7d852b6de259454eec",
          "linkedWithoutMetadata": "b64b5d2728a37ba23213815a5ff510a7000237566cc3fb7d852b6de259454eec"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "console"
        ],
        "methods": [
          "useDodoSwapV1()",
          "useDodoSwapV2(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IDODO": {
        "src": "contracts/dodo/IDODO.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashLoan(uint256,uint256,address,bytes)",
          "_BASE_TOKEN_()",
          "_BASE_RESERVE_()",
          "_QUOTE_TOKEN_()",
          "_QUOTE_RESERVE_()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IDODOProxy": {
        "src": "contracts/dodo/IDODOProxy.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dodoSwapV1(address,address,uint256,uint256,address[],uint256,bool,uint256)",
          "dodoSwapV2TokenToToken(address,address,uint256,uint256,address[],uint256,bool,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IDODOV1Helper": {
        "src": "contracts/dodo/IDODOV1Helper.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "querySellQuoteToken(address,uint256)",
          "querySellBaseToken(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IDODOV2": {
        "src": "contracts/dodo/IDODOV2.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "querySellBase(address,uint256)",
          "querySellQuote(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IFlashloan": {
        "src": "contracts/interfaces/IFlashloan.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ILiquidations": {
        "src": "contracts/interfaces/ILiquidations.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IRouter": {
        "src": "contracts/interfaces/IRouter.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRouterAddress(uint8)",
          "updateRouterAddress(uint8,address)",
          "getFee(address,address)",
          "updateFee(address,address,uint24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BytesLib": {
        "src": "contracts/libraries/BytesLib.sol:4",
        "version": {
          "withMetadata": "cb0a28bff3ce0a5881f52321701432177f1bf27b767a0f5433bcf00696088eb3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Part": {
        "src": "contracts/libraries/Part.sol:6",
        "version": {
          "withMetadata": "a798315c4135092ada4b0cc0a461e83513a2db5275260a8a0419f938454cbb8d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "RouteUtils": {
        "src": "contracts/libraries/RouteUtils.sol:6",
        "version": {
          "withMetadata": "888f039f0ed73a9169fec0bc5d0427c8d0d33fbfdb24b6b052d321cba9269011",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Mock": {
        "src": "contracts/mock/ERC20Mock.sol:7",
        "version": {
          "withMetadata": "9b402499b82a39d3814f8a7cb4163792ccb077ead852a7b62b42223ad95ac424",
          "withoutMetadata": "c7ea88080fb89026d293c599598e269102562b562afc9e558709c8b7b811e54b",
          "linkedWithoutMetadata": "c7ea88080fb89026d293c599598e269102562b562afc9e558709c8b7b811e54b"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferInternal(address,address,uint256)",
          "approveInternal(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Mock",
            "src": "contracts/mock/ERC20Mock.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/uniswap/IUniswapV2Pair.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IUniswapV2Router": {
        "src": "contracts/uniswap/IUniswapV2Router.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/uniswap/IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/uniswap/IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UniswapFork": {
        "src": "contracts/uniswap/UniswapFork.sol:12",
        "version": {
          "withMetadata": "63c5d25a165d7d4e44b2dc4d973e8940bcae8e486042672f9242d9f9434ca52c",
          "withoutMetadata": "36455e10036b6959417fa176431d01c703012d751fd0d64e6edfcb9e50dd1da8",
          "linkedWithoutMetadata": "36455e10036b6959417fa176431d01c703012d751fd0d64e6edfcb9e50dd1da8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "uniswapFork(address,address,uint256,uint256,address[],address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ISwapRouter": {
        "src": "contracts/uniswap/v3/ISwapRouter.sol:9",
        "inherit": [
          "IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IUniswapV3SwapCallback": {
        "src": "contracts/uniswap/v3/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f15a8821b96e0707b64ba45f0848896148d9b3fc96c05411a15fe211378cd47a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}